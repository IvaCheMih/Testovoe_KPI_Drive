// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/CreateFact/": {
            "post": {
                "description": "create fact.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "createFact"
                ],
                "summary": "create fact.",
                "parameters": [
                    {
                        "description": "request",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFactResponse"
                        }
                    }
                }
            }
        },
        "/GetFact/": {
            "post": {
                "description": "get fact.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getFact"
                ],
                "summary": "get fact.",
                "parameters": [
                    {
                        "description": "request",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GetFactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetFactResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateFactRequest": {
            "type": "object",
            "properties": {
                "facts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Fact"
                    }
                }
            }
        },
        "dto.CreateFactResponse": {
            "type": "object"
        },
        "dto.GetFactRequest": {
            "type": "object",
            "properties": {
                "indicator_to_mo_id": {
                    "type": "string"
                },
                "period_end": {
                    "type": "string"
                },
                "period_key": {
                    "type": "string"
                },
                "period_start": {
                    "type": "string"
                }
            }
        },
        "dto.GetFactResponse": {
            "type": "object",
            "properties": {
                "indicator_to_mo_id": {
                    "type": "string"
                },
                "period_end": {
                    "type": "string"
                },
                "period_key": {
                    "type": "string"
                },
                "period_start": {
                    "type": "string"
                }
            }
        },
        "models.Fact": {
            "type": "object",
            "properties": {
                "auth_user_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "fact_time": {
                    "type": "string"
                },
                "indicator_to_mo_fact_id": {
                    "type": "string"
                },
                "indicator_to_mo_id": {
                    "type": "string"
                },
                "is_plan": {
                    "type": "string"
                },
                "period_end": {
                    "type": "string"
                },
                "period_key": {
                    "type": "string"
                },
                "period_start": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "JWT security accessToken. Please add it in the format \"Bearer {AccessToken}\" to authorize your requests.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Fiber Swagger Example API",
	Description:      "This is a sample server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
